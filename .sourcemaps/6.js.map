{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/pages/login/login.ts"],"names":[],"mappings":"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","file":"6.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { LoginPage } from './login';\n\n@NgModule({\n  declarations: [\n    LoginPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(LoginPage),\n    TranslateModule.forChild()\n  ],\n  exports: [\n    LoginPage\n  ]\n})\nexport class LoginPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, ToastController, LoadingController, NavParams } from 'ionic-angular';\nimport { Employee } from \"../../models/employee\";\nimport { EmployeesProvider } from '../../providers/providers';\nimport { MainPage } from '../pages';\nimport { StorageProvider } from \"../../providers/storage/storage\";\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html'\n})\nexport class LoginPage {\n  account: { username: string, password: string } = {\n    username: '',\n    password: ''\n  };\n\n  private loginErrorString: string;\n  private employee: Employee;\n\n  constructor(public navCtrl: NavController,\n    public loadingCtrl: LoadingController,\n    public employeesProvider: EmployeesProvider,\n    public toastCtrl: ToastController,\n    public navParams: NavParams,\n    public storageProvider: StorageProvider) {\n\n    this.loginErrorString = \"登录失败，请检查用户名和密码后重试！\";\n  }\n\n  ionViewWillEnter() { }\n\n  // 管理员登录\n  doLogin() {\n    let loader = this.loadingCtrl.create({\n      content: \"登录中...\"\n    });\n    loader.present().then(() => {\n      this.employeesProvider.login({ account: this.account.username, password: this.account.password }).subscribe((resp) => {\n        if (!resp) {\n          throw new Error(\"获取信息失败\");\n        } else {\n          var ID = resp.ID;\n          // 跳转到店铺信息首页\n          this.navCtrl.push(MainPage);\n          this.storageProvider.saveStoreID(resp.ID);\n          loader.dismiss();\n        }\n        // 保存管理员登录信息\n        this.storageProvider.saveEmployeeInfo({ \"Name\": this.account.username });\n        console.log('登录的雇员是：', this.account.username);\n        // 设置账户状态为已登录\n        // this.storageProvider.changeLoginState(true);\n\n      }, (error) => {\n        loader.dismiss();\n        this.loginErrorString = \"请确认用户名和密码后重试！\";\n        const toast = this.toastCtrl.create({\n          message: this.loginErrorString,\n          duration: 1000,\n          position: 'bottom'\n        });\n        toast.present();\n      });\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}